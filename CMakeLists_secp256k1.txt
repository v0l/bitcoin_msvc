cmake_minimum_required (VERSION 3.11)
project (secp256k1)

include_directories("." "src" "include" "${PROJECT_BINARY_DIR}" "${PROJECT_BINARY_DIR}/src") 
configure_file("libsecp256k1-config.h.in" "${PROJECT_BINARY_DIR}/libsecp256k1-config.h")

option(enable_ecmult_precomputed "enable precomputed ecmult table for signing (default is yes)" ON)
option(enable_recovery "enable ECDSA pubkey recovery module (default is yes)" ON)
option(enable_ecdh "enable ECDH shared secret computation (experimental)" OFF)

if(enable_recovery)
	add_definitions(-DENABLE_MODULE_RECOVERY=1)
	set(src_include_recovery
		"include/secp256k1_recovery.h"
	)
endif(enable_recovery)

if(enable_ecdh)
	add_definitions(-DENABLE_MODULE_ECDH=1)
	set(src_include_ecdh
		"include/secp256k1_ecdh.h"
	)
endif(enable_ecdh)

if(enable_ecmult_precomputed)
	file(WRITE "${PROJECT_BINARY_DIR}/src/ecmult_static_context.h" "MISSING CONTENT")
	add_executable(secp256k1_gen_context src/gen_context.c)
endif(enable_ecmult_precomputed)

add_definitions(-DSECP256K1_BUILD)

add_library(secp256k1 STATIC
	"include/secp256k1.h"
	"src/secp256k1.c"
	
	${src_include_recovery}
	${src_include_ecdh}
)

if(enable_ecmult_precomputed)
	add_custom_command(TARGET secp256k1 PRE_BUILD
		COMMAND COPY ARGS /Y $(OutputPath)secp256k1_gen_context.exe $(ProjectDir)secp256k1_gen_context.exe
		COMMAND $(ProjectDir)secp256k1_gen_context.exe
	)
endif(enable_ecmult_precomputed)